-- Script generated by USE 5.1.0

!new Building
!new Floor
!new Floor
!new Floor
!insert (Building1,Floor3) into Floors
!insert (Building1,Floor2) into Floors
!insert (Building1,Floor1) into Floors
!new Lift
!insert (Floor1,Lift1) into CanCallLift
!insert (Lift1,Floor1) into CanGoToFloor
!insert (Lift1,Floor2) into CanGoToFloor
!insert (Floor2,Lift1) into CanCallLift
!insert (Floor3,Lift1) into CanCallLift
!insert (Lift1,Floor3) into CanGoToFloor
!Building1.fireAlarm := false
!Floor1.level := 1
!Floor1.label := 'G'
!Floor1.buttons := Set {FloorButtonDirection::up,FloorButtonDirection::down}
!Floor1.waitingFor := Movement::upward
!Floor1.buttons := Set {FloorButtonDirection::up}
!Floor1.label := 'B'
!Floor2.level := 2
!Floor2.label := 'G'
!Floor2.buttons := Set {FloorButtonDirection::up,FloorButtonDirection::down}
!Floor2.waitingFor := Movement::idle
!Floor1.waitingFor := Movement::idle
!Floor3.level := 3
!Floor3.label := '1'
!Floor3.buttons := Set {FloorButtonDirection::down}
!Floor3.waitingFor := Movement::idle
!Lift1.level := 1
!Lift1.doorsClosed := true
!Lift1.jobMovement := Movement::idle
!Lift1.jobs := Set {}
!Lift1.lockDoor := false


-- Lift moves up 2 floors, removes job off queue, opens doors and sets movement to idle
!Lift1.jobMovement := Movement::upward
!Lift1.jobs := Set {Floor3}
!Lift1.movementLocked := false
!openter Lift1 tick()
!Lift1.level := 3
!Lift1.doorsClosed := false
!Lift1.jobMovement := Movement::idle
!Lift1.jobs := Set {}
!opexit


-- Lift moves down 2 floors with a job on each floor, removes job off queue once at a time, opens doors each time and sets movement to idle afterwards
!Lift1.doorsClosed := true
!Lift1.jobMovement := Movement::downward
!Lift1.jobs := Set {Floor1,Floor2}
!openter Lift1 tick()
!Lift1.level := 2
!Lift1.doorsClosed := false
!Lift1.jobs := Set {Floor1}
!opexit
!Lift1.doorsClosed := true
!openter Lift1 tick()
!Lift1.level := 1
!Lift1.doorsClosed := false
!Lift1.jobMovement := Movement::idle
!Lift1.jobs := Set {}
!opexit


-- Lift completes s job, sees there is another floor with a job on its waitinglist so puts that floors job on its own waitinglist and sets its jobMovement accordingly.
!Lift1.doorsClosed := true
!Lift1.jobMovement := Movement::upward
!Lift1.jobs := Set {Floor2}
!Floor3.waitingFor := Movement::downward
!openter Lift1 tick()
!Lift1.level := 2
!Lift1.doorsClosed := false
!Lift1.jobMovement := Movement::downward
!Lift1.jobs := Set {Floor3}
!Floor3.waitingFor := Movement::idle
!opexit
